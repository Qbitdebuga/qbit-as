version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qbit_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qbit_auth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - qbit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    container_name: qbit_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@qbit.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - qbit_network

  # Redis for caching/session management (will be used later)
  redis:
    image: redis:7-alpine
    container_name: qbit_redis
    ports:
      - "6379:6379"
    networks:
      - qbit_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # API Gateway Service
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: qbit_api_gateway
    environment:
      NODE_ENV: development
      PORT: 3000
      AUTH_SERVICE_URL: http://auth:3002
    ports:
      - "3000:3000"
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    depends_on:
      - auth
    networks:
      - qbit_network
    command: npm run dev
  
  # Auth Service
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: qbit_auth
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/qbit_auth?schema=public
      JWT_SECRET: dev-jwt-secret-key-change-in-production
    ports:
      - "3002:3002"
    volumes:
      - ./services/auth:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qbit_network
    command: npm run dev
  
  # Web App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: qbit_web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
    ports:
      - "3001:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-gateway
    networks:
      - qbit_network
    command: npm run dev

networks:
  qbit_network:
    driver: bridge

volumes:
  postgres_data: 