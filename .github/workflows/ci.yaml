name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Enable Corepack and Install Correct Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.7.0 --activate

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build packages
        run: yarn build

  prisma-validate:
    name: Validate Prisma schema
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qbit_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/qbit_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Enable Corepack and Install Correct Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.7.0 --activate

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Validate Prisma schema
        run: yarn prisma validate

      - name: Check for potential Prisma migration issues
        run: |
          yarn prisma migrate dev --create-only --name ci_check
          git diff --exit-code -- prisma/migrations
