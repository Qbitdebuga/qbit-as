name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qbit_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/qbit_test
      REDIS_URL: redis://localhost:6379
      JWT_SECRET: test-jwt-secret
      JWT_REFRESH_SECRET: test-refresh-jwt-secret
      NODE_ENV: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
      
      - name: Set up database for testing
        run: yarn prisma migrate reset --force
      
      - name: Run unit tests
        run: yarn test:unit
      
      - name: Run integration tests
        run: yarn test:integration
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
      
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qbit_e2e
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/qbit_e2e
      REDIS_URL: redis://localhost:6379
      JWT_SECRET: e2e-test-jwt-secret
      JWT_REFRESH_SECRET: e2e-test-refresh-jwt-secret
      NODE_ENV: test
      E2E_TEST: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
      
      - name: Set up database for E2E testing
        run: yarn prisma migrate reset --force
      
      - name: Run E2E tests
        run: yarn test:e2e
      
      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        with:
          name: e2e-results
          path: e2e-results/ 